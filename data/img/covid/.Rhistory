dir.create("img", showWarnings = FALSE)
source('~/GitHub/Many-Api/data/covidVisualScript.R', echo=TRUE)
source('~/GitHub/Many-Api/data/covidVisualScript.R', echo=TRUE)
for(iso in iso_codes){
if(!dir.exists(iso)){
dir.create(iso, showWarnings = FALSE)
}
setwd(iso)
currentIso <- covidData[covidData[, "iso_code"] == iso,]
currentIso$date <- as.Date(currentIso$date, format = "%Y-%m-%d")
totalCases <- ggplot(data = currentIso, aes(x = date, y = total_cases)) +
geom_line() + theme_ipsum() +
labs(title = sprintf("Total Cases of COVID-19 in %s", currentIso$location),
x = "Month", y = "Total Cases")
#  print(totalCases)
newCases <- ggplot(data = currentIso, aes(x = date, y = new_cases)) +
geom_bar(stat = "identity", fill = "purple") + theme_ipsum() +
labs(title = sprintf("New Cases of COVID-19 in %s", currentIso$location),
x = "Month", y = "New Cases")
#  print(newCases)
totalDeaths <- ggplot(data = currentIso, aes(x = date, y = total_deaths)) +
geom_line() + theme_ipsum() +
labs(title = sprintf("Total Deaths due to COVID-19 in %s", currentIso$location),
x = "Month", y = "Total Deaths")
#  print(totalDeaths)
newDeaths <- ggplot(data = currentIso, aes(x = date, y = new_deaths)) +
geom_bar(stat = "identity", fill = "purple") + theme_ipsum() +
labs(title = sprintf("New Deaths due to of COVID-19 in %s", currentIso$location),
x = "Month", y = "New Deaths")
#  print(newDeaths)
outputFile = sprintf("%s.png", "totalCases")
png(outputFile)
print(totalCases)
dev.off()
outputFile = sprintf("%s.png", "newCases")
png(outputFile)
print(newCases)
dev.off()
outputFile = sprintf("%s.png", "totalDeaths")
png(outputFile)
print(totalDeaths)
dev.off()
outputFile = sprintf("%s.png", "newDeaths")
png(outputFile)
print(newDeaths)
dev.off()
print(iso)
setwd("..")
return()
}
setwd(dirname(parent.frame(2)$ofile))
#setwd("data")
dir.create("img", showWarnings = FALSE)
setwd("img")
dir.create("covid", showWarnings = FALSE)
setwd("covid")
for(iso in iso_codes){
if(!dir.exists(iso)){
dir.create(iso, showWarnings = FALSE)
}
setwd(iso)
currentIso <- covidData[covidData[, "iso_code"] == iso,]
currentIso$date <- as.Date(currentIso$date, format = "%Y-%m-%d")
totalCases <- ggplot(data = currentIso, aes(x = date, y = total_cases)) +
geom_line() + theme_ipsum() +
labs(title = sprintf("Total Cases of COVID-19 in %s", currentIso$location),
x = "Month", y = "Total Cases")
#  print(totalCases)
newCases <- ggplot(data = currentIso, aes(x = date, y = new_cases)) +
geom_bar(stat = "identity", fill = "purple") + theme_ipsum() +
labs(title = sprintf("New Cases of COVID-19 in %s", currentIso$location),
x = "Month", y = "New Cases")
#  print(newCases)
newCaseSmooth <- ggplot(data = currentIso, aes(x = date, y = new_cases_smoothed)) +
geom_bar(stat = "identity", fill = "purple") + theme_ipsum() +
labs(title = sprintf("New Cases of COVID-19 in %s", currentIso$location),
x = "Month", y = "New Cases")
totalDeaths <- ggplot(data = currentIso, aes(x = date, y = total_deaths)) +
geom_line() + theme_ipsum() +
labs(title = sprintf("Total Deaths due to COVID-19 in %s", currentIso$location),
x = "Month", y = "Total Deaths")
#  print(totalDeaths)
newDeaths <- ggplot(data = currentIso, aes(x = date, y = new_deaths)) +
geom_bar(stat = "identity", fill = "purple") + theme_ipsum() +
labs(title = sprintf("New Deaths due to of COVID-19 in %s", currentIso$location),
x = "Month", y = "New Deaths")
#  print(newDeaths)
outputFile = sprintf("%s.png", "totalCases")
png(outputFile)
print(totalCases)
dev.off()
outputFile = sprintf("%s.png", "newCases")
png(outputFile)
print(newCases)
dev.off()
outputFile = sprintf("%s.png", "newCaseSmooth")
png(outputFile)
print(newCaseSmooth)
dev.off()
outputFile = sprintf("%s.png", "totalDeaths")
png(outputFile)
print(totalDeaths)
dev.off()
outputFile = sprintf("%s.png", "newDeaths")
png(outputFile)
print(newDeaths)
dev.off()
print(iso)
setwd("..")
return()
}
setwd(dirname(parent.frame(2)$ofile))
#setwd("data")
dir.create("img", showWarnings = FALSE)
setwd("img")
dir.create("covid", showWarnings = FALSE)
setwd("covid")
for(iso in iso_codes){
if(!dir.exists(iso)){
dir.create(iso, showWarnings = FALSE)
}
setwd(iso)
currentIso <- covidData[covidData[, "iso_code"] == iso,]
currentIso$date <- as.Date(currentIso$date, format = "%Y-%m-%d")
totalCases <- ggplot(data = currentIso, aes(x = date, y = total_cases)) +
geom_line() + theme_ipsum() +
labs(title = sprintf("Total Cases of COVID-19 in %s", currentIso$location),
x = "Month", y = "Total Cases")
#  print(totalCases)
newCases <- ggplot(data = currentIso, aes(x = date, y = new_cases)) +
geom_bar(stat = "identity", fill = "purple") + theme_ipsum() +
labs(title = sprintf("New Cases of COVID-19 in %s", currentIso$location),
x = "Month", y = "New Cases")
#  print(newCases)
newCaseSmooth <- ggplot(data = currentIso, aes(x = date, y = new_cases_smoothed)) +
geom_bar(stat = "identity", fill = "purple") + theme_ipsum() +
labs(title = sprintf("New Cases of COVID-19 in %s", currentIso$location),
x = "Month", y = "New Cases")
totalDeaths <- ggplot(data = currentIso, aes(x = date, y = total_deaths)) +
geom_line() + theme_ipsum() +
labs(title = sprintf("Total Deaths due to COVID-19 in %s", currentIso$location),
x = "Month", y = "Total Deaths")
#  print(totalDeaths)
newDeaths <- ggplot(data = currentIso, aes(x = date, y = new_deaths)) +
geom_bar(stat = "identity", fill = "purple") + theme_ipsum() +
labs(title = sprintf("New Deaths due to of COVID-19 in %s", currentIso$location),
x = "Month", y = "New Deaths")
#  print(newDeaths)
outputFile = sprintf("%s.png", "totalCases")
png(outputFile)
print(totalCases)
dev.off()
outputFile = sprintf("%s.png", "newCases")
png(outputFile)
print(newCases)
dev.off()
outputFile = sprintf("%s.png", "newCaseSmooth")
png(outputFile)
print(newCaseSmooth)
dev.off()
outputFile = sprintf("%s.png", "totalDeaths")
png(outputFile)
print(totalDeaths)
dev.off()
outputFile = sprintf("%s.png", "newDeaths")
png(outputFile)
print(newDeaths)
dev.off()
print(iso)
setwd("..")
break
}
source('~/GitHub/Many-Api/data/covidVisualScript.R', echo=TRUE)
for(iso in iso_codes){
if(!dir.exists(iso)){
dir.create(iso, showWarnings = FALSE)
}
setwd(iso)
currentIso <- covidData[covidData[, "iso_code"] == iso,]
currentIso$date <- as.Date(currentIso$date, format = "%Y-%m-%d")
totalCases <- ggplot(data = currentIso, aes(x = date, y = total_cases)) +
geom_line() + theme_ipsum() +
labs(title = sprintf("Total Cases of COVID-19 in %s", currentIso$location),
x = "Month", y = "Total Cases")
#  print(totalCases)
newCases <- ggplot(data = currentIso, aes(x = date, y = new_cases)) +
geom_bar(stat = "identity", fill = "purple") + theme_ipsum() +
labs(title = sprintf("New Cases of COVID-19 in %s", currentIso$location),
x = "Month", y = "New Cases")
#  print(newCases)
newCaseSmooth <- ggplot(data = currentIso, aes(x = date, y = new_cases_smoothed)) +
geom_line() + theme_ipsum() +
labs(title = sprintf("New Cases of COVID-19 in %s", currentIso$location),
x = "Month", y = "New Cases")
totalDeaths <- ggplot(data = currentIso, aes(x = date, y = total_deaths)) +
geom_line() + theme_ipsum() +
labs(title = sprintf("Total Deaths due to COVID-19 in %s", currentIso$location),
x = "Month", y = "Total Deaths")
#  print(totalDeaths)
newDeaths <- ggplot(data = currentIso, aes(x = date, y = new_deaths)) +
geom_bar(stat = "identity", fill = "purple") + theme_ipsum() +
labs(title = sprintf("New Deaths due to of COVID-19 in %s", currentIso$location),
x = "Month", y = "New Deaths")
#  print(newDeaths)
newDeathSmooth <- ggplot(data = currentIso, aes(x = date, y = new_deaths_smoothed)) +
geom_line() + theme_ipsum() +
labs(title = sprintf("New Deaths of COVID-19 in %s", currentIso$location),
x = "Month", y = "New Deaths")
outputFile = sprintf("%s.png", "totalCases")
png(outputFile)
print(totalCases)
dev.off()
outputFile = sprintf("%s.png", "newCases")
png(outputFile)
print(newCases)
dev.off()
outputFile = sprintf("%s.png", "newCaseSmooth")
png(outputFile)
print(newCaseSmooth)
dev.off()
outputFile = sprintf("%s.png", "totalDeaths")
png(outputFile)
print(totalDeaths)
dev.off()
outputFile = sprintf("%s.png", "newDeaths")
png(outputFile)
print(newDeaths)
dev.off()
outputFile = sprintf("%s.png", "newDeathSmooth")
png(outputFile)
print(newDeathSmooth)
dev.off()
print(iso)
setwd("..")
break
}
